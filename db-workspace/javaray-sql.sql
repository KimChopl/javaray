DROP TABLE TB_FISH;

CREATE TABLE TB_FISH(
	FISH_NO VARCHAR2(5) PRIMARY KEY,
	FISH_NAME VARCHAR2(60) NOT NULL UNIQUE
);

DROP TABLE TB_FISH_CONTENT;
CREATE TABLE TB_FISH_CONTENT(
	FISH_NO VARCHAR2(5) REFERENCES TB_FISH(FISH_NO) PRIMARY KEY,
	START_OUT_OF_SEASON DATE,
	END_OUT_OF_SEASON DATE,
	DEFAULT_SIZE NUMBER,
	EXPLAINATION VARCHAR2(1500) NOT NULL
);

DROP TABLE TB_SERVICE;
CREATE TABLE TB_SERVICE(
	SHIPPING_SERVICE_NO VARCHAR2(5) PRIMARY KEY,
	SHIPPING_SERVICE_CONTENT VARCHAR2(60) NOT NULL UNIQUE
);

DROP TABLE TB_SHIPPING_IMAGE;
CREATE TABLE TB_SHIPPING_IMAGE(
	IMAGE_NO NUMBER PRIMARY KEY,
	IMAGE_PATH VARCHAR2(60) NOT NULL,
	IMAGE_ORIGIN_NAME VARCHAR2(60) NOT NULL,
	IMAGE_CHANGE_NAME VARCHAR2(60) NOT NULL UNIQUE,
	REF_BOARD_NO VARCHAR2(60) NOT NULL,
	IMAGE_LEVEL CHAR(1) NOT NULL,
	STATUS CHAR(1) DEFAULT 'Y' NOT NULL CHECK (STATUS IN('Y', 'N'))
);

DROP TABLE TB_PORT;
CREATE TABLE TB_PORT(
	PORT_NO VARCHAR2(5) PRIMARY KEY,
	LAT NUMBER NOT NULL,
	LON NUMBER NOT NULL,
	ADDRESS VARCHAR2(150) NOT NULL
);

DROP TABLE TB_MEMBER;
CREATE TABLE TB_MEMBER(
	USER_NO NUMBER PRIMARY KEY,
	USER_NAME VARCHAR2(50) NOT NULL,
	USER_ID VARCHAR2(25) NOT NULL UNIQUE,
	USER_PWD VARCHAR2(64) NOT NULL,
	NICKNAME VARCHAR2(50) NOT NULL UNIQUE,
	EMAIL VARCHAR2(80) NOT NULL UNIQUE,
	PHONE VARCHAR2(30) NOT NULL,
	ROLE VARCHAR2(30) NOT NULL,
	CREATE_AT DATE DEFAULT SYSDATE,
	STATUS CHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y', 'N'))
);

DROP TABLE TB_BUSINESS_NUMBER_INFO;
CREATE TABLE TB_BUSINESS_NUMBER_INFO(
	BUSINESS_NUMBER NUMBER PRIMARY KEY,
	USER_NO NUMBER NOT NULL REFRENCES TB_MEMBER(USER_NO),
	RESULT_CONTENT VARCHAR2(150) NOT NULL,
	RESULT_CODE NUMBER NOT NULL
);

DROP TABLE TB_FUNDING_COMPANY;
CREATE TABLE TB_FUNDING_COMPANY(
	BUSINESS_NUMBER NUMBER REFERENCES TB_BUSINESS_NUMBER_INFO(BUSINESS_NUMBER) PRIMARY KEY,
	COMPANY_NAME VARCHAR2(150) NOT NULL,
	PHONE_NUMBER NUMBER NOT NULL,
	OPENIMG_DATE DATE NOT NULL,
	CEO_NAME VARCHAR2(30) NOT NULL,
	COMPANY_INTRODUCE VARCHAR2(3000) NOT NULL,
	APPLICATION_DATE DATE DEFAULT SYSDATE NOT NULL,
	ADMIN_STATUS CHAR(1) DEFAULT 'N' NOT NULL CHECK (ADMIN_STATUS IN('Y', 'N'))
);

DROP TABLE TB_FISHING;
CREATE TABLE TB_FISHING(
	FISHING_NO NUMBER PRIMARY KEY,
	USER_NO NUMBER NOT NULL REFERENCES TB_MEMBER(USER_NO),
	FISHING_NAME VARCHAR2(30) NOT NULL UNIQUE,
	PHONE VARCHAR2(30) NOT NULL UNIQUE,
	ADDRESS VARCHAR2(100) NOT NULL UNIQUE,
	-- DAY VARCHAR2(20) NOT NULL,
	START_TIME VARCHAR2(30) NOT NULL,
	END_TIME VARCHAR2(30) NOT NULL,
	ORDER_CONTENT VARCHAR2(1000),
	LATITUDE NUMBER DEFAULT 0,
	LONGITUDE NUMBER DEFAULT 0,
	STATUS CHAR(1) DEFAULT 'N' NOT NULL CHECK (STATUS IN('Y', 'N'))
);

DROP TABLE TB_FISHING_DAY;
CREATE TABLE TB_FISHING_DAY(
	DAY VARCHAR2(3) NOT NULL,
	FISHING_NO NUMBER NOT NULL REFERENCES TB_FISHING(FISHING_NO),
	PRIMARY KEY(DAY, FISHING_NO)
);

DROP TABLE TB_FISHING_PHOTO;
CREATE TABLE TB_FISHING_PHOTO(
	FILE_NO NUMBER PRIMARY KEY,
	FISHING_NO NUMBER NOT NULL REFERENCES TB_FISHING(FISHING_NO),
	ORIGIN_NAME VARCHAR2(200),
	CHANGE_NAME VARCHAR2(200),
	FILE_PATH VARCHAR2(100),
	FILE_LEVEL NUMBER
);

DROP TABLE TB_FRESH_WATHER_FISH;
CREATE TABLE TB_FRESH_WATHER_FISH(
	FISH_NO NUMBER PRIMARY KEY,
	FISH_NAME VARCHAR2(30) NOT NULL
);

DROP TABLE TB_REGISTERED_FISH;
CREATE TABLE TB_REGISTERED_FISH(
	FISH_NO NUMBER NOT NULL REFERENCES TB_FRESH_WATHER_FISH,
	FISHING_NO NUMBER NOT NULL REFERENCES TB_FRESH_WATHER_FISH(FISHING_NO),
	PRIMARY KEY(FISH_NO, FISHING_NO)
);

DROP TABLE TB_AMENITIES;
CREATE TABLE TB_AMENITIES(
	AMENITIES_NO NUMBER PRIMARY KEY,
	AMENITIES_NAME VARCHAR2(30) NOT NULL
);

DROP TABLE TB_REGISTERED_AMENITIES;
CREATE TABLE TB_REGISTERED_AMENITIES(
	AMENITIES_NO NUMBER NOT NULL REFERENCES TB_AMENITIES,
	FISHING_NO NUMBER NOT NULL REFERENCES TB_FISHING(FISHING_NO),
	PRIMARY KEY(AMENITIES_NO, FISHING_NO)
);

DROP TABLE TB_SHIPPING;
CREATE TABLE TB_SHIPPING(
	SHIPPING_NO VARCHAR2(20) NOT NULL PRIMARY KEY,
	PORT_NO VARCHAR2(5) NOT NULL REFERENCES TB_PORT,
	USER_NO NUMBER NOT NULL REFERENCES TB_MEMBER(USER_NO),
	SHIPPING_TITLE VARCHAR2(90) NOT NULL,
	SHIPPING_CONTENT VARCHAR2(4000) NOT NULL,
	ALLOW_PEPLE_NO NUMBER NOT NULL,
	STATUS CHAR(1) DEFAULT 'Y' NOT NULL CHECK (STATUS IN('Y', 'N')),
	SHIPPING_CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
	SHIPPING_MODIFY_DATE DATE
);

DROP TABLE TB_SHIPPING_SERVICE;
CREATE TABLE TB_SHIPPING_SERVICE(
	SHIPPING_NO VARCHAR2(20) NOT NULL REFERENCES TB_SHIPPING,
	SHIPPING_SERVICE VARCHAR2(5) NOT NULL REFERENCES TB_SERVICE(SHIPPING_SERVICE_NO),
	PRIMARY KEY(SHIPPING_NO, SHIPPING_SERVICE)
);

DROP TABLE TB_SHIPPING_ATTENTION;
CREATE TABLE TB_SHIPPING_ATTENTION(
	SHIPPING_NO VARCHAR2(20) NOT NULL REFERENCES TB_SHIPPING,
	USER_NO NUMBER NOT NULL REFERENCES TB_MEMBER(USER_NO),
	PRIMARY KEY(SHIPPING_NO, USER_NO)
);

DROP TABLE TB_ENABLE_FISH;
CREATE TABLE TB_ENABLE_FISH(
	SHIPPING_NO VARCHAR2(20) NOT NULL REFERENCES TB_SHIPPING,
	FISH_NO VARCHAR2(10) NOT NULL REFERENCES TB_FISH,
	PRIMARY KEY (SHIPPING_NO, FISH_NO)
);

DROP TABLE TB_WEATHER_REPLY;
CREATE TABLE TB_WEATHER_REPLY(
	WEATHER_REPLY_NO VARCHAR2(25) NOT NULL PRIMARY KEY,
	PORT_NO VARCHAR2(5) NOT NULL REFERENCES TB_PORT,
	USER_NO NUMBER NOT NULL REFERENCES TB_MEMBER(USER_NO),
	WEATHER_REPLY_CONTENT VARCHAR2(600) NOT NULL,
	WEATHER_REPLY_CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
	WEATHER_REPLY_MODIFY_DATE DATE,
	STATUS CHAR(1) DEFAULT 'Y' NOT NULL CHECK (STATUS IN('Y', 'N'))
);

DROP TABLE TB_SHIPPING_BOOK;
CREATE TABLE TB_SHIPPING_BOOK(
	BOOK_NO VARCHAR2(25) NOT NULL PRIMARY KEY,
	SHIPPING_NO VARCHAR2(20) NOT NULL REFERENCES TB_SHIPPING,
	USER_NO NUMBER NOT NULL REFERENCES TB_MEMBER(USER_NO),
	BOOK_PEPLE_NO NUMBER NOT NULL,
	PLAY_DATE DATE DEFAULT SYSDATE NOT NULL,
	BOOK_CONTENT VARCHAR2(4000),
	BOOK_CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
	BOOK_MODIFY_DATE DATE
);

DROP TABLE TB_SHIPPING_BOOK_STATUS;
CREATE TABLE TB_SHIPPING_BOOK_STATUS(
	BOOK_NO VARCHAR2(25) NOT NULL REFERENCES TB_SHIPPING_BOOK,
	USER_NO NUMBER NOT NULL REFERENCES TB_MEMBER(USER_NO),
	BOOK_DELETE_DATE DATE DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY(BOOK_NO, USER_NO)
);

DROP TABLE TB_SHIPPING_REVIEW;
CREATE TABLE TB_SHIPPING_REVIEW(
	BOOK_NO VARCHAR2(25) NOT NULL REFERENCES TB_SHIPPING_BOOK PRIMARY KEY,
	RATING NUMBER NOT NULL CHECK (RATING IN(1, 2, 3, 4, 5)),
	REVIEW_CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
	REVIEW_MODIFY_DATE DATE,
	STATUS CHAR(1) DEFAULT 'Y' NOT NULL CHECK (STATUS IN('Y', 'N'))
);

DROP TABLE TB_SHIPPING_DECIDE;
CREATE TABLE TB_SHIPPING_DECIDE(
	BOOK_NO VARCHAR2(25) NOT NULL REFERENCES TB_SHIPPING_BOOK PRIMARY KEY,
	CAPTAIN_COMMENT VARCHAR2(1500),
	BOOK_DECIDE_DATE DATE DEFAULT SYSDATE NOT NULL
);

DROP TABLE TB_SHIPPING_CANCEL;
CREATE TABLE TB_SHIPPING_CANCEL(
	BOOK_NO VARCHAR2(25) NOT NULL REFERENCES TB_SHIPPING_BOOK(BOOK_NO) PRIMARY KEY,
	CANCEL_REASON VARCHAR2(4000) NOT NULL,
	CANCEL_DATE DATE DEFAULT SYSDATE NOT NULL,
	CANCEL_MEMBER_TYPE NUMBER NOT NULL REFERENCES TB_MEMBER(USER_NO)
);

DROP TABLE TB_SHIPPING_PLAY;
CREATE TABLE TB_SHIPPING_PLAY(
	BOOK_NO VARCHAR2(25) NOT NULL REFERENCES TB_SHIPPING_BOOK PRIMARY KEY,
	PLAY CHAR(1) DEFAULT 'Y' NOT NULL CHECK (PLAY IN ('Y', 'N')),
	CAPTAIN_COMMENT VARCHAR2(1500),
	PLAY_DECIDE_DATE DATE DEFAULT SYSDATE NOT NULL
);

DROP TABLE TB_LICENSE;
CREATE TABLE TB_LICENSE(
	FISHING_NO NUMBER REFERENCES TB_FISHING(FISHING_NO) PRIMARY KEY,
	ORIGIN_NAME VARCHAR2(200),
	CHANGE_NAME VARCHAR2(200),
	FILE_PATH VARCHAR2(100),
	FILE_LEVEL NUMBER
);

DROP TABLE TB_PROHIBIT_AREA;
CREATE TABLE TB_PROHIBIT_AREA(
	PROHIBIT_AREA_NO NUMBER PRIMARY KEY,
	PROHIBIT_AREA_NAME VARCHAR2(100) NOT NULL UNIQUE,
	PROHIBIT_AREA_SPOT VARCHAR2(500) UNIQUE,
	PROHIBIT_AREA_LAT NUMBER NOT NULL,
	PROHIBIT_AREA_LNG NUMBER NOT NULL
);

DROP TABLE TB_LIMIT_AREA;
CREATE TABLE TB_LIMIT_AREA(
	LIMIT_AREA_NO NUMBER PRIMARY KEY,
	LIMIT_AREA_NAME VARCHAR2(100) NOT NULL UNIQUE,
	LIMIT_AREA_SPOT VARCHAR2(500),
	LIMIT_AREA_LAT NUMBER NOT NULL,
	LIMIT_AREA_LNG NUMBER NOT NULL
);

DROP TABLE TB_FISHING_PRODUCT;
CREATE TABLE TB_FISHING_PRODUCT(
	PRODUCT_NO NUMBER NOT NULL PRIMARY KEY,
	PRODUCT_NAME VARCHAR2(300),
	PRICE NUMBER
);

DROP TABLE TB_REGISTERED_FISHING_PRODUCT;
CREATE TABLE TB_REGISTERED_FISHING_PRODUCT(
	PRODUCT_NO NUMBER REFERENCES TB_FISHING_PRODUCT,
	FISHING_NO NUMBER REFERENCES TB_FISHING(FISHING_NO),
	PRIMARY KEY(PRODUCT_NO, FISHING_NO)
);

DROP TABLE TB_RESERVATION;
CREATE TABLE TB_RESERVATION(
	REV_NO NUMBER PRIMARY KEY,
	PRODUCT_NO NUMBER NOT NULL REFERENCES TB_FISHING_PRODUCT,
	USER_NO NUMBER NOT NULL REFERENCES TB_MEMBER(USER_NO),
	PERSONNEL NUMBER NOT NULL,
	FISHING_DATE VARCHAR2(30) NOT NULL,
	REV_DATE VARCHAR2(30) DEFAULT SYSDATE NOT NULL,
	MODIFY_DATE VARCHAR2(30),
	STATUS CHAR(1) DEFAULT 'N' NOT NULL CHECK(STATUS IN('N', 'Y'))
);

DROP TABLE TB_REV_CANCEL;
CREATE TABLE TB_REV_CANCEL(
	CANCEL_NO NUMBER PRIMARY KEY,
	REV_NO NUMBER NOT NULL REFERENCES TB_RESERVATION,
	CANCEL_COMMENT VARCHAR2(200) NOT NULL,
	CANCEL_DATE DATE DEFAULT SYSDATE NOT NULL
);

DROP TABLE TB_REVIEW;
CREATE TABLE TB_REVIEW(
	REVIEW_NO NUMBER PRIMARY KEY,
	REV_NO NUMBER NOT NULL REFERENCES TB_RESERVATION,
	USER_NO NUMBER NOT NULL REFERENCES TB_MEMBER(USER_NO),
	CREATED_DATE DATE DEFAULT SYSDATE NOT NULL,
	TITLE VARCHAR2(100) NOT NULL,
	CONTENT VARCHAR2(1000) NOT NULL,
	STATUS CHAR(1) DEFAULT 'N' NOT NULL CHECK(STATUS IN ('N', 'Y'))
);

DROP TABLE TB_REVIEW_PHOTO;
CREATE TABLE TB_REVIEW_PHOTO(
	FILE_NO NUMBER PRIMARY KEY,
	REVIEW_NO NUMBER NOT NULL REFERENCES TB_REVIEW,
	ORIGIN_NAME VARCHAR2(200),
	CHANGE_NAME VARCHAR2(200),
	FILE_PATH VARCHAR2(200),
	FILE_LEVEL NUMBER
);

DROP TABLE TB_SOCIAL_USER;
CREATE TABLE TB_SOCIAL_USER(
	SOCIAL_ID NUMBER PRIMARY KEY,
	USER_NO NUMBER NOT NULL REFERENCES TB_MEMBER(USER_NO),
	SOCIAL_CODE VARCHAR2(50) NOT NULL,
	PROFILE_IMAGE VARCHAR2(1000) NOT NULL,
	CREATE_AT DATE DEFAULT SYSDATE NOT NULL
);

DROP TABLE TB_TOKEN;
CREATE TABLE TB_TOKEN(
	USER_NO NUMBER NOT NULL REFERENCES TB_MEMBER(USER_NO),
	REFRESH_TOKEN VARCHAR2(500) NOT NULL,
	EXPIRED_AT NUMBER NOT NULL
);

DROP TABLE TB_USER_PROFILE;
CREATE TABLE TB_USER_PROFILE(
	PROFILR_NO NUMBER PRIMARY KEY,
	USER_NO NUMBER NOT NULL REFERENCES TB_MEMBER(USER_NO),
	CHANGE_NAME VARCHAR2(100),
	PATH VARCHAR2(100),
	STATUS CHAR(1) DEFAULT 'N' CHECK(STATUS IN ('N', 'Y'))
);


DROP TABLE TB_CHAT_ROOM;
CREATE TABLE TB_CHAT_ROOM(
	ROOM_NO NUMBER PRIMARY KEY,
	ROOM_NAME VARCHAR2(255) NOT NULL,
	USER_NO NUMBER NOT NULL REFERENCES TB_MEMBER(USER_NO),
	ROOM_PWD VARCHAR2(50),
	STATUS CHAR(1) DEFAULT 'Y' NOT NULL CHECK(STATUS IN ('Y', 'N'))
);

DROP TABLE TB_CHAT_MESSAGE;
CREATE TABLE TB_CHAT_MESSAGE(
	PARTICIPANT_NO NUMBER PRIMARY KEY,
	ROOM_NO NUMBER NOT NULL REFERENCES TB_CHAT_ROOM,
	USER_NO NUMBER NOT NULL REFERENCES TB_MEMBER(USER_NO),
	MESSAGE VARCHAR2(255) NOT NULL,
	IS_READ CHAR(1),
	CREATA_AT VARCHAR2(50) DEFAULT SYSDATE NOT NULL
);

DROP TABLE TB_CHAT_ALARM;
CREATE TABLE TB_CHAT_ALARM(
	ALARM_NO NUMBER PRIMARY KEY,
	ROOM_NO NUMBER NOT NULL REFERENCES TB_CHAT_ROOM,
	USER_NO NUMBER NOT NULL REFERENCES TB_MEMBER(USER_NO),
	JOINED_AT DATE DEFAULT SYSDATE NOT NULL,
	UNREAD_COUNT VARCHAR2(500) NOT NULL,
	UPDATEED_AT DATE DEFAULT SYSDATE
);

DROP TABLE TB_FUNDING_CATEGORY;
CREATE TABLE TB_FUNDING_CATEGORY(
	CATEGORY_NO NUMBER PRIMARY KEY,
	CATEGORY_NAME VARCHAR2(30) NOT NULL
);

DROP TABLE TB_FUNDING_BOARD;
CREATE TABLE TB_FUNDING_BOARD(
	BOARD_NO NUMBER PRIMARY KEY,
	USER_NO NUMBER NOT NULL REFERENCES TB_MEMBER,
	CATEGORY_NO NUMBER NOT NULL REFERENCES TB_FUNDING_CATEGORY,
	TITLE VARCHAR2(150) NOT NULL,
	CONTENT VARCHAR2(3000) NOT NULL,
	START_DATE DATE NOT NULL,
	END_DATE DATE NOT NULL,
	STATUS CHAR(1) DEFAULT 'N' NOT NULL CHECK (STATUS IN('N', 'Y')),
	PURPOSE_AMOUNT NUMBER NOT NULL
);

DROP TABLE TB_PRODUCT_OPTION;
CREATE TABLE TB_PRODUCT_OPTION(
	OPTION_NO NUMBER NOT NULL PRIMARY KEY,
	BOARD_NO NUMBER NOT NULL REFERENCES TB_FUNDING_BOARD,
	OPTION_TYPE NUMBER NOT NULL,
	OPTION_TITLE VARCHAR2(150) NOT NULL,
	OPTION_EXPLAIN VARCHAR2(1500) NOT NULL,
	OPTION_PRICE NUMBER NOT NULL,
	TOTAL_COUNT NUMBER NOT NULL,
	SALE_COUNT NUMBER NOT NULL
);

DROP TABLE TB_FISHING_DAY;
CREATE TABLE TB_FISHING_DAY(
	FISHING_DAY VARCHAR2(3),
	FISHING_NO NUMBER NOT NULL REGERENCE TB_FISHING,
	PRIMARY KEY (FISHING_DAY, FISHING_NO)
);

DROP TABLE TB_FUNDING_FILE;
CREATE TABLE TB_FUNDING_FILE(
	REF_BNO NUMBER NOT NULL REFERENCES TB_FUNDING_BOARD PRIMARY KEY,
	FILE_LEVEL NUMBER NOT NULL,
	FILE_URL VARCHAR2(400) NOT NULL,
);

DROP TABLE TB_PURCHASE_INFO;
CREATE TABLE TB_PURCHASE_INFO(
	HISTORY_NO NUMBER PRIMARY KEY,
	USER_NO NUMBER NOT NULL REFERENCES TB_MEMBER(USER_NO),
	OPTION_NO NUMBER NOT NULL REFERENCES TB_PRODUCT_OPTION,
	OPTION_COUNT NUMBER
);

DROP TABLE TB_DELIVERY_INFO;
CREATE TABLE TB_DELIVERY_INFO(
	HISTORY_NO NUMBER REFERENCES TB_PURCHASE_INFO PRIMARY KEY,
	DELIVERY_RECEIVER VARCHAR2(60) NOT NULL,
	PHONE_NUMBER NUMBER NOT NULL,
	DELIVERY_ADDRESS VARCHAR2(150) NOT NULL,
	DELIVERY_REQUEST VARCHAR2(300)
);


DROP TABLE TB_CARD_COMPANY;
CREATE TABLE TB_CARD_COMPANY(
	CARD_CODE NUMBER PRIMARY KEY,
	CARD_COMPANY_NAME VARCHAR2(60) NOT NULL
);

DROP TABLE TB_PAYMENT_INFO;
CREATE TABLE TB_PAYMENT_INFO(
	HISTORY_NO NUMBER REFERENCES TB_PURCHASE_INFO PRIMARY KEY,
	CARD_CODE NUMBER NOT NULL REFERENCES TB_CARD_COMPANY
);

ALTER TABLE TB_FUNDING_COMPANY ADD FILE_URL VARCHAR2(400) NOT NULL;
CREATE SEQUENCE SEQ_USER_NO;

DROP TABLE TB_WEATHER_REPLY ;
DROP TABLE TB_CHAT_MESSAGE ;
DROP TABLE TB_CHAT_ALARM ;
DROP TABLE TB_CHAT_ROOM ;
ALTER TABLE TB_FISH_CONTENT ADD NOTE VARCHAR2(2000);
COMMIT;

ALTER TABLE TB_MEMBER ADD MODIFY_AT DATE;


SELECT * FROM TB_PAYMENT_INFO;

CREATE SEQUENCE SEQ_FANO;
CREATE SEQUENCE SEQ_FFNO;


DROP TABLE TB_FISHING_DAY;

CREATE TABLE TB_DAY(
	DAY_NO NUMBER PRIMARY KEY,
	DAY VARCHAR2(3) NOT NULL
);

CREATE TABLE TB_FISHING_DAY(
	FISHING_NO NUMBER NOT NULL REFERENCES TB_FISHING,
	DAY_NO NUMBER NOT NULL REFERENCES TB_DAY
);

SELECT * FROM TB_DAY;

CREATE SEQUENCE SEQ_DNO;


ALTER TABLE TB_FISHING DROP COLUMN ADRESS;

DROP TABLE TB_REGISTERED_FISH;

CREATE TABLE TB_REGISTERED_FISH(
	FISH_NO NUMBER NOT NULL REFERENCES TB_FRESH_WATHER_FISH(FISH_NO),
	FISHING_NO NUMBER NOT NULL REFERENCES TB_FISHING(FISHING_NO),
	PRIMARY KEY(FISH_NO, FISHING_NO)
);


--더미데이터 INSERT

INSERT
  INTO
  		TB_AMENITIES
  		(
  		AMENITIES_NO,
  		AMENITIES_NAME
  		)
VALUES
		(
		SEQ_FANO.NEXTVAL,
		'에어컨'
		);

INSERT 
  INTO 
  		TB_FRESH_WATHER_FISH
  		(
  		FISH_NO ,
  		FISH_NAME 
  		)
 VALUES
 		(
 		SEQ_FFNO.NEXTVAL,
 		'민물기타'
 		);

INSERT 
  INTO 
  		TB_DAY
  		(
  		DAY_NO,
  		DAY
  		)
 VALUES
 		(
		SEQ_DNO.NEXTVAL,
		'일'
 		);

CREATE TABLE TB_WEATHER_PORT(
	SOPT_CODE VARCHAR2(10) PRIMARY KEY,
	SOPT_NAME VARCHAR2(72) NOT NULL UNIQUE
);

ALTER TABLE TB_PORT ADD PORT_CODE REFERENCES TB_WEATHER_PORT(SPOT_CODE);

ALTER TABLE TB_FISHING RENAME COLUMN "COMMENT" TO INTRODUCE;


